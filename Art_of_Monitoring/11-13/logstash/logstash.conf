input {
  tcp {
    port => 5514
    type => syslog
  }
  tcp {
    port  => 2003
    type  => "riemann"
    codec => "json"
  }
  udp {
    port => 5514
    type => syslog
  }
  file {
    path => [ "/var/log/syslog", "/var/log/auth.log" ]
    type => "syslog"
  }
}
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:syslog_timestamp}) %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\/%{DATA:container_name}\/%{DATA:container_id})?(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      remove_field => ["message"]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
    }
    if [syslog_program] == "tornado-haproxy" {
      grok {
        match => ["syslog_message", "%{HAPROXYHTTPBASE}"]
        remove_field => ["syslog_message"]
        add_field => { "tags" => "tornado"
      }
    }
    if [syslog_program] == "tornado-nginx-access" {
      grok {
        patterns_dir => "/etc/logstash/patterns"
        match => { "syslog_message" => "%{NGINXACCESS}" }
        remove_field => ["syslog_message"]
        add_field => { "tags" => "tornado"
      }
    }
    if [syslog_program] == "tornado-api" {
      grok {
        patterns_dir => "/etc/logstash/patterns"
        match => { "syslog_message" => "%{TORNADOAPI}" }
        remove_field => ["syslog_message"]
        add_field => { "tags" => "tornado" }
      }
    }
  }
}
output {
  if [syslog_program] == "tornado-haproxy" {
     riemann {
       host => "riemanna"
       sender => "%{syslog_hostname}"
       map_fields => true
       riemann_event => {
         "service"     => "tornado.proxy.request"
         "metric"      => "%{time_duration}"
         "state"       => "ok"
       }
    }
  }
  if [syslog_program] == "tornado-nginx-access" {
     riemann {
       host => "riemanna"
       sender => "%{syslog_hostname}"
       map_fields => true
       riemann_event => {
         "service" => "tornado.web.request"
         "metric"  => "%{body_bytes_sent}"
         "state"   => "ok"
      }
    }
  }
  if [syslog_program] == "tornado-api" and [app_request_time] {
     riemann {
       host => "riemanna"
       sender => "%{syslog_hostname}"
       map_fields => true
       riemann_event => {
         "service" => "tornado.api.request"
         "metric"  => "%{app_request_time}"
         "state"   => "ok"
      }
    }
  }
  elasticsearch {
    sniffing => true
    hosts => "esa1.example.com"
  }
}
